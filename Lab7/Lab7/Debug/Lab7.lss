
Lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000075e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00802000  00802000  0000075e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000007d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000187  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000f9  00000000  00000000  00000997  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001ae  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00000c40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000018a  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d3  00000000  00000000  00000e56  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00000f29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  fc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 100:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 104:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 108:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 10c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 110:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 114:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 118:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 11c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 120:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 124:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 128:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 12c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 130:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 134:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 138:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 13c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 140:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 144:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 148:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 14c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 150:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 154:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 158:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 15c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 160:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 164:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 168:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 16c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 170:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 174:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 178:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 17c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 180:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 184:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 188:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 18c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 190:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 194:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 198:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 19c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a4 30       	cpi	r26, 0x04	; 4
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <main>
 228:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <_exit>

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <init_DAC>:

//TAKES: Voltage (must be between 0 and 2.5V)
//Sets the DAC to output a constant voltage on Port A Pin 2
void init_DAC(float voltage)
{
		PORTA_DIRSET = 0x04;
 230:	24 e0       	ldi	r18, 0x04	; 4
 232:	20 93 01 06 	sts	0x0601, r18	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
		PORTB_DIRCLR = 0x01;
 236:	21 e0       	ldi	r18, 0x01	; 1
 238:	20 93 22 06 	sts	0x0622, r18	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
		
		//Enable the DAC
		DACA_CTRLA = 0x05; //Enabling channel 0 and output overall
 23c:	25 e0       	ldi	r18, 0x05	; 5
 23e:	20 93 00 03 	sts	0x0300, r18	; 0x800300 <__TEXT_REGION_LENGTH__+0x700300>
		DACA_CTRLB = 0x00;
 242:	10 92 01 03 	sts	0x0301, r1	; 0x800301 <__TEXT_REGION_LENGTH__+0x700301>
		DACA_CTRLC = 0x18; //Reference voltage on AREFB (2.5V)
 246:	28 e1       	ldi	r18, 0x18	; 24
 248:	20 93 02 03 	sts	0x0302, r18	; 0x800302 <__TEXT_REGION_LENGTH__+0x700302>
		DACA_CH0DATA = (4095/2.5)*voltage; //Write conversion function (4095/2.5)*1.7 = 2785
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	30 ec       	ldi	r19, 0xC0	; 192
 250:	4c ec       	ldi	r20, 0xCC	; 204
 252:	54 e4       	ldi	r21, 0x44	; 68
 254:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 258:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fixunssfsi>
 25c:	60 93 18 03 	sts	0x0318, r22	; 0x800318 <__TEXT_REGION_LENGTH__+0x700318>
 260:	70 93 19 03 	sts	0x0319, r23	; 0x800319 <__TEXT_REGION_LENGTH__+0x700319>
 264:	08 95       	ret

00000266 <inc_DAC>:
}

float voltage = 0;

inc_DAC()
{
 266:	cf 92       	push	r12
 268:	df 92       	push	r13
 26a:	ef 92       	push	r14
 26c:	ff 92       	push	r15
	voltage = voltage + .25;
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	40 e8       	ldi	r20, 0x80	; 128
 274:	5e e3       	ldi	r21, 0x3E	; 62
 276:	60 91 00 20 	lds	r22, 0x2000	; 0x802000 <_edata>
 27a:	70 91 01 20 	lds	r23, 0x2001	; 0x802001 <_edata+0x1>
 27e:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <_edata+0x2>
 282:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <_edata+0x3>
 286:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__addsf3>
 28a:	6b 01       	movw	r12, r22
 28c:	7c 01       	movw	r14, r24
 28e:	60 93 00 20 	sts	0x2000, r22	; 0x802000 <_edata>
 292:	70 93 01 20 	sts	0x2001, r23	; 0x802001 <_edata+0x1>
 296:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <_edata+0x2>
 29a:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <_edata+0x3>
	if(voltage<=2.5){
 29e:	20 e0       	ldi	r18, 0x00	; 0
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	40 e2       	ldi	r20, 0x20	; 32
 2a4:	50 e4       	ldi	r21, 0x40	; 64
 2a6:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__cmpsf2>
 2aa:	18 16       	cp	r1, r24
 2ac:	7c f0       	brlt	.+30     	; 0x2cc <inc_DAC+0x66>
		DACA_CH0DATA = (4095/2.5)*(voltage);
 2ae:	20 e0       	ldi	r18, 0x00	; 0
 2b0:	30 ec       	ldi	r19, 0xC0	; 192
 2b2:	4c ec       	ldi	r20, 0xCC	; 204
 2b4:	54 e4       	ldi	r21, 0x44	; 68
 2b6:	c7 01       	movw	r24, r14
 2b8:	b6 01       	movw	r22, r12
 2ba:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 2be:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fixunssfsi>
 2c2:	60 93 18 03 	sts	0x0318, r22	; 0x800318 <__TEXT_REGION_LENGTH__+0x700318>
 2c6:	70 93 19 03 	sts	0x0319, r23	; 0x800319 <__TEXT_REGION_LENGTH__+0x700319>
 2ca:	0c c0       	rjmp	.+24     	; 0x2e4 <inc_DAC+0x7e>
	}
	else{
		voltage = 2.5;
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	a0 e2       	ldi	r26, 0x20	; 32
 2d2:	b0 e4       	ldi	r27, 0x40	; 64
 2d4:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <_edata>
 2d8:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <_edata+0x1>
 2dc:	a0 93 02 20 	sts	0x2002, r26	; 0x802002 <_edata+0x2>
 2e0:	b0 93 03 20 	sts	0x2003, r27	; 0x802003 <_edata+0x3>
	}
}
 2e4:	ff 90       	pop	r15
 2e6:	ef 90       	pop	r14
 2e8:	df 90       	pop	r13
 2ea:	cf 90       	pop	r12
 2ec:	08 95       	ret

000002ee <dec_DAC>:

dec_DAC(){
 2ee:	cf 92       	push	r12
 2f0:	df 92       	push	r13
 2f2:	ef 92       	push	r14
 2f4:	ff 92       	push	r15
	voltage = voltage - .25;
 2f6:	20 e0       	ldi	r18, 0x00	; 0
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	40 e8       	ldi	r20, 0x80	; 128
 2fc:	5e e3       	ldi	r21, 0x3E	; 62
 2fe:	60 91 00 20 	lds	r22, 0x2000	; 0x802000 <_edata>
 302:	70 91 01 20 	lds	r23, 0x2001	; 0x802001 <_edata+0x1>
 306:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <_edata+0x2>
 30a:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <_edata+0x3>
 30e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__subsf3>
 312:	6b 01       	movw	r12, r22
 314:	7c 01       	movw	r14, r24
 316:	60 93 00 20 	sts	0x2000, r22	; 0x802000 <_edata>
 31a:	70 93 01 20 	sts	0x2001, r23	; 0x802001 <_edata+0x1>
 31e:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <_edata+0x2>
 322:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <_edata+0x3>
	if(voltage>=0){
 326:	20 e0       	ldi	r18, 0x00	; 0
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	a9 01       	movw	r20, r18
 32c:	0e 94 01 03 	call	0x602	; 0x602 <__gesf2>
 330:	88 23       	and	r24, r24
 332:	7c f0       	brlt	.+30     	; 0x352 <dec_DAC+0x64>
		DACA_CH0DATA = (4095/2.5)*(voltage);
 334:	20 e0       	ldi	r18, 0x00	; 0
 336:	30 ec       	ldi	r19, 0xC0	; 192
 338:	4c ec       	ldi	r20, 0xCC	; 204
 33a:	54 e4       	ldi	r21, 0x44	; 68
 33c:	c7 01       	movw	r24, r14
 33e:	b6 01       	movw	r22, r12
 340:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 344:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__fixunssfsi>
 348:	60 93 18 03 	sts	0x0318, r22	; 0x800318 <__TEXT_REGION_LENGTH__+0x700318>
 34c:	70 93 19 03 	sts	0x0319, r23	; 0x800319 <__TEXT_REGION_LENGTH__+0x700319>
 350:	08 c0       	rjmp	.+16     	; 0x362 <dec_DAC+0x74>
	}
	else{
		voltage = 0;
 352:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <_edata>
 356:	10 92 01 20 	sts	0x2001, r1	; 0x802001 <_edata+0x1>
 35a:	10 92 02 20 	sts	0x2002, r1	; 0x802002 <_edata+0x2>
 35e:	10 92 03 20 	sts	0x2003, r1	; 0x802003 <_edata+0x3>
	}
}
 362:	ff 90       	pop	r15
 364:	ef 90       	pop	r14
 366:	df 90       	pop	r13
 368:	cf 90       	pop	r12
 36a:	08 95       	ret

0000036c <init_USART>:

void init_USART(){
	PORTD_DIRSET = 0x08;
 36c:	88 e0       	ldi	r24, 0x08	; 8
 36e:	80 93 61 06 	sts	0x0661, r24	; 0x800661 <__TEXT_REGION_LENGTH__+0x700661>
	PORTD_OUTSET = 0x08;
 372:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
	PORTD_DIRCLR = 0x04;
 376:	84 e0       	ldi	r24, 0x04	; 4
 378:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <__TEXT_REGION_LENGTH__+0x700662>

	//Initializing portQ bits as outputs (with appropriate values)
	
	PORTQ_DIRSET = 0x0A;
 37c:	8a e0       	ldi	r24, 0x0A	; 10
 37e:	80 93 c1 07 	sts	0x07C1, r24	; 0x8007c1 <__TEXT_REGION_LENGTH__+0x7007c1>
	PORTQ_OUTCLR = 0x0A;
 382:	80 93 c6 07 	sts	0x07C6, r24	; 0x8007c6 <__TEXT_REGION_LENGTH__+0x7007c6>
	
	USARTD0_CTRLB = 0x18;	//Emable receiver enable and transmitter enable
 386:	88 e1       	ldi	r24, 0x18	; 24
 388:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <__TEXT_REGION_LENGTH__+0x7009a4>
	
	//BSEL = 
	//BSCALE = -1;
	
	//Lower 8 of BSEL
	USARTD0_BAUDCTRLA = 0x9D;
 38c:	8d e9       	ldi	r24, 0x9D	; 157
 38e:	80 93 a6 09 	sts	0x09A6, r24	; 0x8009a6 <__TEXT_REGION_LENGTH__+0x7009a6>
	USARTD0_BAUDCTRLB = 0xE1;
 392:	81 ee       	ldi	r24, 0xE1	; 225
 394:	80 93 a7 09 	sts	0x09A7, r24	; 0x8009a7 <__TEXT_REGION_LENGTH__+0x7009a7>
	//;Writing the equivalent calcluations for baud rate
	//;	BSEL = 0x121	; 289 in hex
	//;	BSCALE = 0b1001 ;-7 since 2's complement
	
	
	USARTD0_CTRLC = 0b00110011; // 00 (asynchronous) | 11 (odd parity) | 0 (stop bit) | 011 (8 bit data size)
 398:	83 e3       	ldi	r24, 0x33	; 51
 39a:	80 93 a5 09 	sts	0x09A5, r24	; 0x8009a5 <__TEXT_REGION_LENGTH__+0x7009a5>
 39e:	08 95       	ret

000003a0 <main>:

//MAIN FUNCTION 
//DESCRIPTION: Calls initialization for the DAC at 1.7 volts
int main(void)
{
    init_DAC(0);
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	cb 01       	movw	r24, r22
 3a6:	0e 94 18 01 	call	0x230	; 0x230 <init_DAC>
	init_USART();
 3aa:	0e 94 b6 01 	call	0x36c	; 0x36c <init_USART>
	while (1) 
    {
		if((USARTD0_STATUS & 0x80) == 0x80){
 3ae:	c1 ea       	ldi	r28, 0xA1	; 161
 3b0:	d9 e0       	ldi	r29, 0x09	; 9
			char read = USARTD0_DATA;
 3b2:	00 ea       	ldi	r16, 0xA0	; 160
 3b4:	19 e0       	ldi	r17, 0x09	; 9
{
    init_DAC(0);
	init_USART();
	while (1) 
    {
		if((USARTD0_STATUS & 0x80) == 0x80){
 3b6:	88 81       	ld	r24, Y
 3b8:	88 23       	and	r24, r24
 3ba:	ec f7       	brge	.-6      	; 0x3b6 <main+0x16>
			char read = USARTD0_DATA;
 3bc:	f8 01       	movw	r30, r16
 3be:	80 81       	ld	r24, Z
			if(read == 'H' || read == 'h'){
 3c0:	8f 7d       	andi	r24, 0xDF	; 223
 3c2:	88 34       	cpi	r24, 0x48	; 72
 3c4:	19 f4       	brne	.+6      	; 0x3cc <main+0x2c>
				inc_DAC();
 3c6:	0e 94 33 01 	call	0x266	; 0x266 <inc_DAC>
 3ca:	f5 cf       	rjmp	.-22     	; 0x3b6 <main+0x16>
			}
			else if(read == 'L' || read == 'l'){
 3cc:	8c 34       	cpi	r24, 0x4C	; 76
 3ce:	99 f7       	brne	.-26     	; 0x3b6 <main+0x16>
				dec_DAC();
 3d0:	0e 94 77 01 	call	0x2ee	; 0x2ee <dec_DAC>
 3d4:	f0 cf       	rjmp	.-32     	; 0x3b6 <main+0x16>

000003d6 <__subsf3>:
 3d6:	50 58       	subi	r21, 0x80	; 128

000003d8 <__addsf3>:
 3d8:	bb 27       	eor	r27, r27
 3da:	aa 27       	eor	r26, r26
 3dc:	0e 94 03 02 	call	0x406	; 0x406 <__addsf3x>
 3e0:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_round>
 3e4:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_pscA>
 3e8:	38 f0       	brcs	.+14     	; 0x3f8 <__addsf3+0x20>
 3ea:	0e 94 c0 02 	call	0x580	; 0x580 <__fp_pscB>
 3ee:	20 f0       	brcs	.+8      	; 0x3f8 <__addsf3+0x20>
 3f0:	39 f4       	brne	.+14     	; 0x400 <__FUSE_REGION_LENGTH__>
 3f2:	9f 3f       	cpi	r25, 0xFF	; 255
 3f4:	19 f4       	brne	.+6      	; 0x3fc <__addsf3+0x24>
 3f6:	26 f4       	brtc	.+8      	; 0x400 <__FUSE_REGION_LENGTH__>
 3f8:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_nan>
 3fc:	0e f4       	brtc	.+2      	; 0x400 <__FUSE_REGION_LENGTH__>
 3fe:	e0 95       	com	r30
 400:	e7 fb       	bst	r30, 7
 402:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_inf>

00000406 <__addsf3x>:
 406:	e9 2f       	mov	r30, r25
 408:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_split3>
 40c:	58 f3       	brcs	.-42     	; 0x3e4 <__addsf3+0xc>
 40e:	ba 17       	cp	r27, r26
 410:	62 07       	cpc	r22, r18
 412:	73 07       	cpc	r23, r19
 414:	84 07       	cpc	r24, r20
 416:	95 07       	cpc	r25, r21
 418:	20 f0       	brcs	.+8      	; 0x422 <__addsf3x+0x1c>
 41a:	79 f4       	brne	.+30     	; 0x43a <__addsf3x+0x34>
 41c:	a6 f5       	brtc	.+104    	; 0x486 <__addsf3x+0x80>
 41e:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_zero>
 422:	0e f4       	brtc	.+2      	; 0x426 <__addsf3x+0x20>
 424:	e0 95       	com	r30
 426:	0b 2e       	mov	r0, r27
 428:	ba 2f       	mov	r27, r26
 42a:	a0 2d       	mov	r26, r0
 42c:	0b 01       	movw	r0, r22
 42e:	b9 01       	movw	r22, r18
 430:	90 01       	movw	r18, r0
 432:	0c 01       	movw	r0, r24
 434:	ca 01       	movw	r24, r20
 436:	a0 01       	movw	r20, r0
 438:	11 24       	eor	r1, r1
 43a:	ff 27       	eor	r31, r31
 43c:	59 1b       	sub	r21, r25
 43e:	99 f0       	breq	.+38     	; 0x466 <__addsf3x+0x60>
 440:	59 3f       	cpi	r21, 0xF9	; 249
 442:	50 f4       	brcc	.+20     	; 0x458 <__addsf3x+0x52>
 444:	50 3e       	cpi	r21, 0xE0	; 224
 446:	68 f1       	brcs	.+90     	; 0x4a2 <__addsf3x+0x9c>
 448:	1a 16       	cp	r1, r26
 44a:	f0 40       	sbci	r31, 0x00	; 0
 44c:	a2 2f       	mov	r26, r18
 44e:	23 2f       	mov	r18, r19
 450:	34 2f       	mov	r19, r20
 452:	44 27       	eor	r20, r20
 454:	58 5f       	subi	r21, 0xF8	; 248
 456:	f3 cf       	rjmp	.-26     	; 0x43e <__addsf3x+0x38>
 458:	46 95       	lsr	r20
 45a:	37 95       	ror	r19
 45c:	27 95       	ror	r18
 45e:	a7 95       	ror	r26
 460:	f0 40       	sbci	r31, 0x00	; 0
 462:	53 95       	inc	r21
 464:	c9 f7       	brne	.-14     	; 0x458 <__addsf3x+0x52>
 466:	7e f4       	brtc	.+30     	; 0x486 <__addsf3x+0x80>
 468:	1f 16       	cp	r1, r31
 46a:	ba 0b       	sbc	r27, r26
 46c:	62 0b       	sbc	r22, r18
 46e:	73 0b       	sbc	r23, r19
 470:	84 0b       	sbc	r24, r20
 472:	ba f0       	brmi	.+46     	; 0x4a2 <__addsf3x+0x9c>
 474:	91 50       	subi	r25, 0x01	; 1
 476:	a1 f0       	breq	.+40     	; 0x4a0 <__addsf3x+0x9a>
 478:	ff 0f       	add	r31, r31
 47a:	bb 1f       	adc	r27, r27
 47c:	66 1f       	adc	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	c2 f7       	brpl	.-16     	; 0x474 <__addsf3x+0x6e>
 484:	0e c0       	rjmp	.+28     	; 0x4a2 <__addsf3x+0x9c>
 486:	ba 0f       	add	r27, r26
 488:	62 1f       	adc	r22, r18
 48a:	73 1f       	adc	r23, r19
 48c:	84 1f       	adc	r24, r20
 48e:	48 f4       	brcc	.+18     	; 0x4a2 <__addsf3x+0x9c>
 490:	87 95       	ror	r24
 492:	77 95       	ror	r23
 494:	67 95       	ror	r22
 496:	b7 95       	ror	r27
 498:	f7 95       	ror	r31
 49a:	9e 3f       	cpi	r25, 0xFE	; 254
 49c:	08 f0       	brcs	.+2      	; 0x4a0 <__addsf3x+0x9a>
 49e:	b0 cf       	rjmp	.-160    	; 0x400 <__FUSE_REGION_LENGTH__>
 4a0:	93 95       	inc	r25
 4a2:	88 0f       	add	r24, r24
 4a4:	08 f0       	brcs	.+2      	; 0x4a8 <__addsf3x+0xa2>
 4a6:	99 27       	eor	r25, r25
 4a8:	ee 0f       	add	r30, r30
 4aa:	97 95       	ror	r25
 4ac:	87 95       	ror	r24
 4ae:	08 95       	ret

000004b0 <__cmpsf2>:
 4b0:	0e 94 8c 02 	call	0x518	; 0x518 <__fp_cmp>
 4b4:	08 f4       	brcc	.+2      	; 0x4b8 <__cmpsf2+0x8>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	08 95       	ret

000004ba <__fixunssfsi>:
 4ba:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_splitA>
 4be:	88 f0       	brcs	.+34     	; 0x4e2 <__fixunssfsi+0x28>
 4c0:	9f 57       	subi	r25, 0x7F	; 127
 4c2:	98 f0       	brcs	.+38     	; 0x4ea <__fixunssfsi+0x30>
 4c4:	b9 2f       	mov	r27, r25
 4c6:	99 27       	eor	r25, r25
 4c8:	b7 51       	subi	r27, 0x17	; 23
 4ca:	b0 f0       	brcs	.+44     	; 0x4f8 <__fixunssfsi+0x3e>
 4cc:	e1 f0       	breq	.+56     	; 0x506 <__fixunssfsi+0x4c>
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	1a f0       	brmi	.+6      	; 0x4de <__fixunssfsi+0x24>
 4d8:	ba 95       	dec	r27
 4da:	c9 f7       	brne	.-14     	; 0x4ce <__fixunssfsi+0x14>
 4dc:	14 c0       	rjmp	.+40     	; 0x506 <__fixunssfsi+0x4c>
 4de:	b1 30       	cpi	r27, 0x01	; 1
 4e0:	91 f0       	breq	.+36     	; 0x506 <__fixunssfsi+0x4c>
 4e2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_zero>
 4e6:	b1 e0       	ldi	r27, 0x01	; 1
 4e8:	08 95       	ret
 4ea:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_zero>
 4ee:	67 2f       	mov	r22, r23
 4f0:	78 2f       	mov	r23, r24
 4f2:	88 27       	eor	r24, r24
 4f4:	b8 5f       	subi	r27, 0xF8	; 248
 4f6:	39 f0       	breq	.+14     	; 0x506 <__fixunssfsi+0x4c>
 4f8:	b9 3f       	cpi	r27, 0xF9	; 249
 4fa:	cc f3       	brlt	.-14     	; 0x4ee <__fixunssfsi+0x34>
 4fc:	86 95       	lsr	r24
 4fe:	77 95       	ror	r23
 500:	67 95       	ror	r22
 502:	b3 95       	inc	r27
 504:	d9 f7       	brne	.-10     	; 0x4fc <__fixunssfsi+0x42>
 506:	3e f4       	brtc	.+14     	; 0x516 <__fixunssfsi+0x5c>
 508:	90 95       	com	r25
 50a:	80 95       	com	r24
 50c:	70 95       	com	r23
 50e:	61 95       	neg	r22
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	8f 4f       	sbci	r24, 0xFF	; 255
 514:	9f 4f       	sbci	r25, 0xFF	; 255
 516:	08 95       	ret

00000518 <__fp_cmp>:
 518:	99 0f       	add	r25, r25
 51a:	00 08       	sbc	r0, r0
 51c:	55 0f       	add	r21, r21
 51e:	aa 0b       	sbc	r26, r26
 520:	e0 e8       	ldi	r30, 0x80	; 128
 522:	fe ef       	ldi	r31, 0xFE	; 254
 524:	16 16       	cp	r1, r22
 526:	17 06       	cpc	r1, r23
 528:	e8 07       	cpc	r30, r24
 52a:	f9 07       	cpc	r31, r25
 52c:	c0 f0       	brcs	.+48     	; 0x55e <__fp_cmp+0x46>
 52e:	12 16       	cp	r1, r18
 530:	13 06       	cpc	r1, r19
 532:	e4 07       	cpc	r30, r20
 534:	f5 07       	cpc	r31, r21
 536:	98 f0       	brcs	.+38     	; 0x55e <__fp_cmp+0x46>
 538:	62 1b       	sub	r22, r18
 53a:	73 0b       	sbc	r23, r19
 53c:	84 0b       	sbc	r24, r20
 53e:	95 0b       	sbc	r25, r21
 540:	39 f4       	brne	.+14     	; 0x550 <__fp_cmp+0x38>
 542:	0a 26       	eor	r0, r26
 544:	61 f0       	breq	.+24     	; 0x55e <__fp_cmp+0x46>
 546:	23 2b       	or	r18, r19
 548:	24 2b       	or	r18, r20
 54a:	25 2b       	or	r18, r21
 54c:	21 f4       	brne	.+8      	; 0x556 <__fp_cmp+0x3e>
 54e:	08 95       	ret
 550:	0a 26       	eor	r0, r26
 552:	09 f4       	brne	.+2      	; 0x556 <__fp_cmp+0x3e>
 554:	a1 40       	sbci	r26, 0x01	; 1
 556:	a6 95       	lsr	r26
 558:	8f ef       	ldi	r24, 0xFF	; 255
 55a:	81 1d       	adc	r24, r1
 55c:	81 1d       	adc	r24, r1
 55e:	08 95       	ret

00000560 <__fp_inf>:
 560:	97 f9       	bld	r25, 7
 562:	9f 67       	ori	r25, 0x7F	; 127
 564:	80 e8       	ldi	r24, 0x80	; 128
 566:	70 e0       	ldi	r23, 0x00	; 0
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	08 95       	ret

0000056c <__fp_nan>:
 56c:	9f ef       	ldi	r25, 0xFF	; 255
 56e:	80 ec       	ldi	r24, 0xC0	; 192
 570:	08 95       	ret

00000572 <__fp_pscA>:
 572:	00 24       	eor	r0, r0
 574:	0a 94       	dec	r0
 576:	16 16       	cp	r1, r22
 578:	17 06       	cpc	r1, r23
 57a:	18 06       	cpc	r1, r24
 57c:	09 06       	cpc	r0, r25
 57e:	08 95       	ret

00000580 <__fp_pscB>:
 580:	00 24       	eor	r0, r0
 582:	0a 94       	dec	r0
 584:	12 16       	cp	r1, r18
 586:	13 06       	cpc	r1, r19
 588:	14 06       	cpc	r1, r20
 58a:	05 06       	cpc	r0, r21
 58c:	08 95       	ret

0000058e <__fp_round>:
 58e:	09 2e       	mov	r0, r25
 590:	03 94       	inc	r0
 592:	00 0c       	add	r0, r0
 594:	11 f4       	brne	.+4      	; 0x59a <__fp_round+0xc>
 596:	88 23       	and	r24, r24
 598:	52 f0       	brmi	.+20     	; 0x5ae <__fp_round+0x20>
 59a:	bb 0f       	add	r27, r27
 59c:	40 f4       	brcc	.+16     	; 0x5ae <__fp_round+0x20>
 59e:	bf 2b       	or	r27, r31
 5a0:	11 f4       	brne	.+4      	; 0x5a6 <__fp_round+0x18>
 5a2:	60 ff       	sbrs	r22, 0
 5a4:	04 c0       	rjmp	.+8      	; 0x5ae <__fp_round+0x20>
 5a6:	6f 5f       	subi	r22, 0xFF	; 255
 5a8:	7f 4f       	sbci	r23, 0xFF	; 255
 5aa:	8f 4f       	sbci	r24, 0xFF	; 255
 5ac:	9f 4f       	sbci	r25, 0xFF	; 255
 5ae:	08 95       	ret

000005b0 <__fp_split3>:
 5b0:	57 fd       	sbrc	r21, 7
 5b2:	90 58       	subi	r25, 0x80	; 128
 5b4:	44 0f       	add	r20, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	59 f0       	breq	.+22     	; 0x5d0 <__fp_splitA+0x10>
 5ba:	5f 3f       	cpi	r21, 0xFF	; 255
 5bc:	71 f0       	breq	.+28     	; 0x5da <__fp_splitA+0x1a>
 5be:	47 95       	ror	r20

000005c0 <__fp_splitA>:
 5c0:	88 0f       	add	r24, r24
 5c2:	97 fb       	bst	r25, 7
 5c4:	99 1f       	adc	r25, r25
 5c6:	61 f0       	breq	.+24     	; 0x5e0 <__fp_splitA+0x20>
 5c8:	9f 3f       	cpi	r25, 0xFF	; 255
 5ca:	79 f0       	breq	.+30     	; 0x5ea <__fp_splitA+0x2a>
 5cc:	87 95       	ror	r24
 5ce:	08 95       	ret
 5d0:	12 16       	cp	r1, r18
 5d2:	13 06       	cpc	r1, r19
 5d4:	14 06       	cpc	r1, r20
 5d6:	55 1f       	adc	r21, r21
 5d8:	f2 cf       	rjmp	.-28     	; 0x5be <__fp_split3+0xe>
 5da:	46 95       	lsr	r20
 5dc:	f1 df       	rcall	.-30     	; 0x5c0 <__fp_splitA>
 5de:	08 c0       	rjmp	.+16     	; 0x5f0 <__fp_splitA+0x30>
 5e0:	16 16       	cp	r1, r22
 5e2:	17 06       	cpc	r1, r23
 5e4:	18 06       	cpc	r1, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	f1 cf       	rjmp	.-30     	; 0x5cc <__fp_splitA+0xc>
 5ea:	86 95       	lsr	r24
 5ec:	71 05       	cpc	r23, r1
 5ee:	61 05       	cpc	r22, r1
 5f0:	08 94       	sec
 5f2:	08 95       	ret

000005f4 <__fp_zero>:
 5f4:	e8 94       	clt

000005f6 <__fp_szero>:
 5f6:	bb 27       	eor	r27, r27
 5f8:	66 27       	eor	r22, r22
 5fa:	77 27       	eor	r23, r23
 5fc:	cb 01       	movw	r24, r22
 5fe:	97 f9       	bld	r25, 7
 600:	08 95       	ret

00000602 <__gesf2>:
 602:	0e 94 8c 02 	call	0x518	; 0x518 <__fp_cmp>
 606:	08 f4       	brcc	.+2      	; 0x60a <__gesf2+0x8>
 608:	8f ef       	ldi	r24, 0xFF	; 255
 60a:	08 95       	ret

0000060c <__mulsf3>:
 60c:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3x>
 610:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_round>
 614:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_pscA>
 618:	38 f0       	brcs	.+14     	; 0x628 <__mulsf3+0x1c>
 61a:	0e 94 c0 02 	call	0x580	; 0x580 <__fp_pscB>
 61e:	20 f0       	brcs	.+8      	; 0x628 <__mulsf3+0x1c>
 620:	95 23       	and	r25, r21
 622:	11 f0       	breq	.+4      	; 0x628 <__mulsf3+0x1c>
 624:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_inf>
 628:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_nan>
 62c:	11 24       	eor	r1, r1
 62e:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_szero>

00000632 <__mulsf3x>:
 632:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_split3>
 636:	70 f3       	brcs	.-36     	; 0x614 <__mulsf3+0x8>

00000638 <__mulsf3_pse>:
 638:	95 9f       	mul	r25, r21
 63a:	c1 f3       	breq	.-16     	; 0x62c <__mulsf3+0x20>
 63c:	95 0f       	add	r25, r21
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	55 1f       	adc	r21, r21
 642:	62 9f       	mul	r22, r18
 644:	f0 01       	movw	r30, r0
 646:	72 9f       	mul	r23, r18
 648:	bb 27       	eor	r27, r27
 64a:	f0 0d       	add	r31, r0
 64c:	b1 1d       	adc	r27, r1
 64e:	63 9f       	mul	r22, r19
 650:	aa 27       	eor	r26, r26
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	aa 1f       	adc	r26, r26
 658:	64 9f       	mul	r22, r20
 65a:	66 27       	eor	r22, r22
 65c:	b0 0d       	add	r27, r0
 65e:	a1 1d       	adc	r26, r1
 660:	66 1f       	adc	r22, r22
 662:	82 9f       	mul	r24, r18
 664:	22 27       	eor	r18, r18
 666:	b0 0d       	add	r27, r0
 668:	a1 1d       	adc	r26, r1
 66a:	62 1f       	adc	r22, r18
 66c:	73 9f       	mul	r23, r19
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	83 9f       	mul	r24, r19
 676:	a0 0d       	add	r26, r0
 678:	61 1d       	adc	r22, r1
 67a:	22 1f       	adc	r18, r18
 67c:	74 9f       	mul	r23, r20
 67e:	33 27       	eor	r19, r19
 680:	a0 0d       	add	r26, r0
 682:	61 1d       	adc	r22, r1
 684:	23 1f       	adc	r18, r19
 686:	84 9f       	mul	r24, r20
 688:	60 0d       	add	r22, r0
 68a:	21 1d       	adc	r18, r1
 68c:	82 2f       	mov	r24, r18
 68e:	76 2f       	mov	r23, r22
 690:	6a 2f       	mov	r22, r26
 692:	11 24       	eor	r1, r1
 694:	9f 57       	subi	r25, 0x7F	; 127
 696:	50 40       	sbci	r21, 0x00	; 0
 698:	9a f0       	brmi	.+38     	; 0x6c0 <__mulsf3_pse+0x88>
 69a:	f1 f0       	breq	.+60     	; 0x6d8 <__mulsf3_pse+0xa0>
 69c:	88 23       	and	r24, r24
 69e:	4a f0       	brmi	.+18     	; 0x6b2 <__mulsf3_pse+0x7a>
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	bb 1f       	adc	r27, r27
 6a6:	66 1f       	adc	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	88 1f       	adc	r24, r24
 6ac:	91 50       	subi	r25, 0x01	; 1
 6ae:	50 40       	sbci	r21, 0x00	; 0
 6b0:	a9 f7       	brne	.-22     	; 0x69c <__mulsf3_pse+0x64>
 6b2:	9e 3f       	cpi	r25, 0xFE	; 254
 6b4:	51 05       	cpc	r21, r1
 6b6:	80 f0       	brcs	.+32     	; 0x6d8 <__mulsf3_pse+0xa0>
 6b8:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_inf>
 6bc:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_szero>
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	e4 f3       	brlt	.-8      	; 0x6bc <__mulsf3_pse+0x84>
 6c4:	98 3e       	cpi	r25, 0xE8	; 232
 6c6:	d4 f3       	brlt	.-12     	; 0x6bc <__mulsf3_pse+0x84>
 6c8:	86 95       	lsr	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f7 95       	ror	r31
 6d2:	e7 95       	ror	r30
 6d4:	9f 5f       	subi	r25, 0xFF	; 255
 6d6:	c1 f7       	brne	.-16     	; 0x6c8 <__mulsf3_pse+0x90>
 6d8:	fe 2b       	or	r31, r30
 6da:	88 0f       	add	r24, r24
 6dc:	91 1d       	adc	r25, r1
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret

000006e6 <_exit>:
 6e6:	f8 94       	cli

000006e8 <__stop_program>:
 6e8:	ff cf       	rjmp	.-2      	; 0x6e8 <__stop_program>
